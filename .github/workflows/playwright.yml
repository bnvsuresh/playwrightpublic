name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
# on:
#   schedule:
#   - cron: "30 11 * * *"    #runs at 11:30 UTC everyday
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test --reporter=line,html,allure-playwright
    
    - name: Get Allure history.
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
          ref: gh-pages
          path: gh-pages

    - name: Allure report action from Marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages.
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
    
    - name: Set current date as env variable.
      run: |
          echo "event_name=$GITHUB_EVENT_NAME" >> $GITHUB_OUTPUT
          echo "workflow=$GITHUB_WORKFLOW" >> $GITHUB_OUTPUT
          echo "actor=$GITHUB_ACTOR" >> $GITHUB_OUTPUT
          echo "run_number=$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
      id: version
    
    # - name: setup python
    #   uses: actions/setup-python@v2
    #   with:
    #       python-version: 3.8 #install the python needed
    # - name: Install dependencies
    #   run: |
    #         python -m pip install --upgrade pip
    #         pip install flake8 pytest
    #         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: execute py script # run file
    #   run: |
    #        python my_file.py

    # - name: Send email notification.
    #   env:
    #       EMAIL_SENDER: ${{secrets.MAIL_USERNAME}}
    #       EMAIL_PASSWORD: ${{secrets.MAIL_PASSWORD}}
    #       EMAIL_RECEIVERS: zokirovrustam202@gmail.com,madiyor5552@mail.ru,nnarziev@gmail.com
    #       ENV: DEV
    #       RUN_NUMBER: ${{ steps.version.outputs.run_number }}
    #       EVENT_NAME: ${{ steps.version.outputs.event_name }}
    #       WORKFLOW: ${{ steps.version.outputs.workflow }}
    #       ACTOR: ${{ steps.version.outputs.actor }}
    #   run: |
    #       poetry run python send_notification.py
    #   https://github.com/Rustam-Z/disney-test-api-taf/blob/main/.github/workflows/manual_triggering.yml

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30    
